<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012-2013 Institut National des Sciences Appliquées de Lyon (INSA-Lyon)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.golo-lang</groupId>
  <artifactId>golo</artifactId>
  <version>0-preview5-SNAPSHOT</version>

  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>

  <packaging>jar</packaging>

  <name>Golo Programming Language</name>
  <description>Golo: a lightweight dynamic language for the JVM.</description>
  <url>http://golo-lang.org/</url>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git@github.com:golo-lang/golo-lang.git</connection>
    <url>scm:git:git@github.com:golo-lang/golo-lang.git</url>
    <developerConnection>scm:git:git@github.com:golo-lang/golo-lang.git</developerConnection>
  </scm>

  <developers>
    <developer>
      <id>jponge</id>
      <name>Julien Ponge</name>
      <email>julien.ponge@insa-lyon.fr</email>
      <url>http://julien.ponge.org/</url>
      <organization>INSA-Lyon</organization>
    </developer>
  </developers>

  <contributors>
    <contributor>
      <name>David Festal</name>
      <email>david.festal@serli.com</email>
      <organization>SERLI</organization>
    </contributor>
    <contributor>
      <name>Dan Allen</name>
      <email>dan.j.allen@gmail.com</email>
      <organization>Red Hat</organization>
    </contributor>
    <contributor>
      <name>Daniel Petisme</name>
      <email>daniel.petisme@gmail.com</email>
    </contributor>
    <contributor>
      <name>Philippe Charrière</name>
      <email>ph.charriere@gmail.com</email>
    </contributor>
  </contributors>

  <organization>
    <name>Institut National des Sciences Appliquées de Lyon (INSA-Lyon)</name>
    <url>http://www.insa-lyon.fr/</url>
  </organization>

  <prerequisites>
    <maven>3.0</maven>
  </prerequisites>

  <properties>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <surefire.useFile>false</surefire.useFile>
    <maven.build.timestamp.format>yy-MM-dd-HH:mm</maven.build.timestamp.format>
    <build.timestamp>${maven.build.timestamp}</build.timestamp>
    <relocation.base>thirdparty</relocation.base>

    <asm.version>4.1</asm.version>
    <hamcrest-all.version>1.3</hamcrest-all.version>
    <testng.version>6.8.5</testng.version>

    <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>2.14.1</maven-surefire-plugin.version>
    <javacc-maven-plugin.version>2.6</javacc-maven-plugin.version>
    <maven-assembly-plugin.version>2.4</maven-assembly-plugin.version>
    <jacoco-maven-plugin.version>0.6.2.201302030002</jacoco-maven-plugin.version>
    <appassembler-maven-plugin.version>1.3.1</appassembler-maven-plugin.version>
    <animal-sniffer-maven-plugin.version>1.9</animal-sniffer-maven-plugin.version>
    <jcommander.version>1.30</jcommander.version>
    <maven-jar-plugin.version>2.4</maven-jar-plugin.version>
    <maven-bundle-plugin.version>2.4.0</maven-bundle-plugin.version>
    <asciidoctor-maven-plugin.version>0.1.3.1</asciidoctor-maven-plugin.version>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm</artifactId>
      <version>${asm.version}</version>
    </dependency>

    <dependency>
      <groupId>com.beust</groupId>
      <artifactId>jcommander</artifactId>
      <version>${jcommander.version}</version>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-util</artifactId>
      <version>${asm.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.ow2.asm</groupId>
      <artifactId>asm-analysis</artifactId>
      <version>${asm.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>${hamcrest-all.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <version>${testng.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

  </dependencies>

  <build>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <runOrder>random</runOrder>
          <systemPropertyVariables>
            <golo.test.trace>no</golo.test.trace>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>javacc-maven-plugin</artifactId>
        <version>${javacc-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>jjtree-javacc</id>
            <goals>
              <goal>jjtree-javacc</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven-jar-plugin.version}</version>
        <configuration>
          <archive>
            <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>${maven-bundle-plugin.version}</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-RequiredExecutionEnvironment>JavaSE-1.7</Bundle-RequiredExecutionEnvironment>
          </instructions>
        </configuration>
        <executions>
          <execution>
            <id>bundle-manifest</id>
            <phase>process-classes</phase>
            <goals>
              <goal>manifest</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>appassembler-maven-plugin</artifactId>
        <version>${appassembler-maven-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>assemble</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <repositoryName>lib</repositoryName>
          <repositoryLayout>flat</repositoryLayout>
          <licenseHeaderFile>${project.basedir}/LICENSE-header</licenseHeaderFile>
          <extraJvmArguments>-server -Xms1024M -Xmx1024M -XX:-TieredCompilation</extraJvmArguments>
          <programs>
            <program>
              <name>golo</name>
              <mainClass>fr.insalyon.citi.golo.cli.Main</mainClass>
            </program>
          </programs>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven-assembly-plugin.version}</version>
        <configuration>
          <tarLongFileMode>gnu</tarLongFileMode>
          <attach>false</attach>
          <descriptors>
            <descriptor>src/main/assembly/distribution.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>assembly-with-package</id>
            <phase>package</phase>
            <goals>
              <goal>attached</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <version>${animal-sniffer-maven-plugin.version}</version>
        <configuration>
          <signature>
            <groupId>org.codehaus.mojo.signature</groupId>
            <artifactId>java17</artifactId>
            <version>1.0</version>
          </signature>
          <ignores>
            <ignore>java.lang.invoke.MethodHandle</ignore>
          </ignores>
        </configuration>
        <executions>
          <execution>
            <id>check-jdk-signatures</id>
            <phase>test</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <profiles>

    <profile>
      <id>verbose-tests</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <systemPropertyVariables>
                <golo.test.trace>yes</golo.test.trace>
              </systemPropertyVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
       This allows building Golo without building the .golo files.

       This is required in a clean-room environment, as the Maven plugin needs Golo... and Golo needs
       the plugin :-)
    -->
    <profile>
      <id>bootstrapped</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.golo-lang</groupId>
            <artifactId>golo-maven-plugin</artifactId>
            <version>${project.version}</version>
            <executions>
              <execution>
                <phase>compile</phase>
                <goals>
                  <goal>goloc</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <environmentVariables>
                <golo.bootstrapped>yes</golo.bootstrapped>
              </environmentVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>test-coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <phase>test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <environmentVariables>
                <golo.bootstrapped>yes</golo.bootstrapped>
              </environmentVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>docs</id>
      <!-- Execute using: mvn generate-resources -Pdocs -->
      <!-- Single-page HTML => doc/output/golo-guide.html -->
      <!-- Chunked HTML     => target/docbook/publish/en-US/html/index.html -->
      <!-- PDF Document     => target/docbook/publish/en-US/pdf/golo-guide.pdf -->
      <build>
        <plugins>
          <plugin>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctor-maven-plugin</artifactId>
            <version>${asciidoctor-maven-plugin.version}</version>
            <executions>
              <execution>
                <id>generate-html</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <backend>html</backend> 
                  <outputDirectory>doc/output</outputDirectory>
                  <attributes>
                    <!-- not working, set linkcss! in document instead
                    <linkcss>false</linkcss>
                    -->
                    <!-- defer until we get better styles
                    <source-highlighter>coderay</source-highlighter>
                    -->
                    <icons>font</icons>
                    <toc2>true</toc2>
                    <sectanchors>true</sectanchors>
                    <!-- we need to be able to set basedir to avoid specifying doc/ prefix -->
                    <!-- use path relative to basedir if embedding
                    <stylesdir>doc/stylesheets</stylesdir>
                    -->
                    <!-- use path relative to output if linking -->
                    <stylesdir>../stylesheets</stylesdir>
                    <!-- golo.css retrieved from the Asciidoctor stylesheet factory at
                         https://github.com/asciidoctor/asciidoctor-stylesheet-factory -->
                    <stylesheet>golo.css</stylesheet>
                  </attributes>
                </configuration>
              </execution>
              <execution>
                <id>generate-docbook</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <backend>docbook</backend> 
                  <doctype>book</doctype>
                  <outputDirectory>target/docbook/en-US</outputDirectory>
                  <attributes>
                    <toc>true</toc>
                  </attributes>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <!-- Not working, see issue #58 in asciidoctor/asciidoctor-maven-plugin
              <sourceDirectory>doc</sourceDirectory>
              -->
              <sourceDocumentName>doc/golo-guide.asciidoc</sourceDocumentName>
              <eruby>erubis</eruby>
            </configuration>
          </plugin>

          <!-- jdocbook/pressgang plugins require use of JBoss Public Repository -->
          <plugin>
            <groupId>org.jboss.maven.plugins</groupId>
            <artifactId>maven-jdocbook-plugin</artifactId>
            <version>2.3.8</version>
            <extensions>true</extensions>
            <dependencies>
              <dependency>
                <groupId>org.jboss.pressgang</groupId>
                <artifactId>pressgang-xslt-ns</artifactId>
                <version>3.0.0</version>
              </dependency>
              <dependency>
                <groupId>org.jboss.pressgang</groupId>
                <artifactId>pressgang-jdocbook-style</artifactId>
                <type>jdocbook-style</type>
                <version>3.0.0</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>generate-from-docbook</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>resources</goal>
                  <goal>generate</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <!-- add custom fonts to the fonts directory -->
              <fontsDirectory>${basedir}/fonts</fontsDirectory>
              <!-- the source document is produced by the asciidoctor-maven-plugin -->
              <sourceDocumentName>golo-guide.xml</sourceDocumentName>
              <sourceDirectory>target/docbook</sourceDirectory>
              <imageResource>
                <directory>.</directory>
                <includes>
                  <include>images/*</include>
                </includes>
              </imageResource>
              <formats>
                <!--
                <format>
                  <formatName>html_single</formatName>
                  <stylesheetResource>classpath:/xslt/org/jboss/pressgang/xhtml-single.xsl</stylesheetResource>
                  <finalName>index.html</finalName>
                </format>
                -->
                <format>
                  <formatName>html</formatName>
                  <stylesheetResource>classpath:/xslt/org/jboss/pressgang/xhtml.xsl</stylesheetResource>
                  <finalName>index.html</finalName>
                </format>
                <format>
                  <formatName>pdf</formatName>
                  <stylesheetResource>file://${basedir}/doc/docbook-xsl/pdf-asciidoctor.xsl</stylesheetResource>
                  <finalName>golo-guide.pdf</finalName>
                </format>
              </formats>
              <options>
                <autoDetectFonts>true</autoDetectFonts>
                <xincludeSupported>true</xincludeSupported>
                <xmlTransformerType>saxon</xmlTransformerType>
                <docbookVersion>1.76.1</docbookVersion>
                <transformerParameters>
                  <!-- AsciiDoc processing instructions not processed until version 3.0.1 of pressgang-tools -->
                  <asciidoc.mode>1</asciidoc.mode>
                </transformerParameters>
              </options>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

</project>
